/*
 * This file is generated by jOOQ.
 */
package com.vominh.example.jooq.generate.tables.records;


import com.vominh.example.jooq.generate.tables.Device;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeviceRecord extends UpdatableRecordImpl<DeviceRecord> implements Record4<Integer, Integer, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.device.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.device.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.device.serial</code>.
     */
    public void setSerial(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.device.serial</code>.
     */
    public Integer getSerial() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.device.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.device.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.device.version</code>.
     */
    public void setVersion(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.device.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Device.DEVICE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Device.DEVICE.SERIAL;
    }

    @Override
    public Field<String> field3() {
        return Device.DEVICE.NAME;
    }

    @Override
    public Field<Integer> field4() {
        return Device.DEVICE.VERSION;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getSerial();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Integer component4() {
        return getVersion();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getSerial();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Integer value4() {
        return getVersion();
    }

    @Override
    public DeviceRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DeviceRecord value2(Integer value) {
        setSerial(value);
        return this;
    }

    @Override
    public DeviceRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public DeviceRecord value4(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public DeviceRecord values(Integer value1, Integer value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DeviceRecord
     */
    public DeviceRecord() {
        super(Device.DEVICE);
    }

    /**
     * Create a detached, initialised DeviceRecord
     */
    public DeviceRecord(Integer id, Integer serial, String name, Integer version) {
        super(Device.DEVICE);

        setId(id);
        setSerial(serial);
        setName(name);
        setVersion(version);
    }
}
